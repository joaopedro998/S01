package main

import (
    "fmt"
    "math"
)

func main() {
    var a, b, c float64
    fmt.Print("Digite o valor de a: ")
    fmt.Scanln(&a)
    fmt.Print("Digite o valor de b: ")
    fmt.Scanln(&b)
    fmt.Print("Digite o valor de c: ")
    fmt.Scanln(&c)

    delta := b*b - 4*a*c

    if delta < 0 {
        fmt.Println("A equação não tem raízes reais.")
    } else {
        raiz1 := (-b + math.Sqrt(delta)) / (2 * a)
        raiz2 := (-b - math.Sqrt(delta)) / (2 * a)
        fmt.Printf("As raízes da equação são: x1 = %.2f e x2 = %.2f\n", raiz1, raiz2)
    }
}



package main

import (
    "fmt"
    "math/rand"
    "time"
)

// Função para calcular o fatorial
func fatorial(n int) int {
    if n == 0 {
        return 1
    }
    return n * fatorial(n-1)
}

func main() {
    rand.Seed(time.Now().UnixNano()) // Para gerar números diferentes cada vez
    numero := rand.Intn(10)          // Número aleatório entre 0 e 10

    fmt.Printf("Número aleatório: %d\n", numero)
    fmt.Printf("Fatorial de %d: %d\n", numero, fatorial(numero))
}
